plugins {
	id 'org.jetbrains.kotlin.jvm' version '1.9.25'
	id 'org.jetbrains.kotlin.plugin.spring' version '1.9.25'
	id 'org.springframework.boot' version '3.5.6'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.ingsis-team'
version = '0.0.1-SNAPSHOT'
description = 'Demo project for Spring Boot'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

dependencies {
    implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation("com.fasterxml.jackson.module:jackson-module-kotlin:2.15.2")
    testImplementation("org.jetbrains.kotlin:kotlin-test")
    implementation 'jakarta.servlet:jakarta.servlet-api:6.0.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.8.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-reactor:1.8.1'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.17.1'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.jetbrains.kotlin:kotlin-reflect'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.jetbrains.kotlin:kotlin-test-junit5'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'printscript:commons:1.0.1-SNAPSHOT'
    implementation 'printscript:interpreter:1.0.1-SNAPSHOT'
    implementation 'printscript:parser:1.0.1-SNAPSHOT'
    implementation 'printscript:lexer:1.0.1-SNAPSHOT'
    implementation 'printscript:linter:1.0.1-SNAPSHOT'
    implementation 'printscript:formatter:1.0.1-SNAPSHOT'
}

kotlin {
	compilerOptions {
		freeCompilerArgs.addAll '-Xjsr305=strict'
	}
}

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        name = "GitHubPackages"
        url = uri("https://maven.pkg.github.com/ingsis-team/printscript")
        credentials {
            username = "ingsis-team"
            password = project.findProperty("gpr.token") ?: System.getenv("GITHUB_TOKEN")
        }
    }
}

tasks.named('test') {
	useJUnitPlatform()
}
